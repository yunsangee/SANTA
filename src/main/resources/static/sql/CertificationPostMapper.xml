<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="site.dearmysanta.service.certification.CertificationPostDao">

    <resultMap id="CertificationPostSelectMap" type="site.dearmysanta.domain.certificationPost.CertificationPost">
  	 
        <result property="postNo" column="cp_no" jdbcType="NUMERIC"/>
        <result property="userNo" column="user_no" jdbcType="NUMERIC"/>
        <result property="nickName" column="nickname" jdbcType="VARCHAR"/>
        <result property="title" column="cp_title" jdbcType="VARCHAR"/>
        <result property="contents" column="cp_contents" jdbcType="VARCHAR"/>
        <result property="postDate" column="cp_creation_date" jdbcType="DATE"/>

        <result property="certificationPostMountainName" column="cp_mountain_name" jdbcType="VARCHAR"/>
        <result property="certificationPostHikingTrail" column="cp_hiking_trail" jdbcType="VARCHAR"/>
        <result property="certificationPostTotalTime" column="cp_total_time" jdbcType="VARCHAR"/>
        <result property="certificationPostAscentTime" column="cp_ascent_time" jdbcType="VARCHAR"/>
        <result property="certificationPostDescentTime" column="cp_descent_time" jdbcType="VARCHAR"/>
        <result property="certificationPostHikingDate" column="cp_hiking_date" jdbcType="VARCHAR"/>
        <result property="certificationPostTransportation" column="cp_transportation" jdbcType="NUMERIC"/>
        <result property="certificationPostHikingDifficulty" column="cp_difficulty" jdbcType="NUMERIC"/>
        <result property="certificationPostDeletedFlag" column="cp_deleted_flag" jdbcType="NUMERIC"/>
        <result property="certificationPostHashtagContents" column="hashtag_content" jdbcType="VARCHAR"/>
        <result property="certificationPostLikeCount" column="cp_like_count" jdbcType="NUMERIC"/>
        
    </resultMap>


 <resultMap id="certificationPostCommentSelectMap" type="site.dearmysanta.domain.certificationPost.CertificationPostComment">
  	         <result property="userNo" 		column="userNo" 				jdbcType="NUMERIC"/>
        <result property="nickname" 	column="nickname" 				jdbcType="VARCHAR"/>
        <result property="profileImage" 	column="profile_image" 			jdbcType="VARCHAR"/>
        

        <result property="certificationPostNo" column="post_no" jdbcType="NUMERIC"/>
        <result property="certificationPostCommentNo" column="comment_no" jdbcType="NUMERIC"/>
        <result property="certificationPostCommentContents" column="comment_contents" jdbcType="VARCHAR"/>
        <result property="certificationPostCommentCreationDate" column="comment_creation_date" jdbcType="DATE"/>

    </resultMap>
    
   <!-- post -->

 
    <insert id="addCertificationPost" parameterType="site.dearmysanta.domain.certificationPost.CertificationPost">
        <selectKey keyProperty="postNo" resultType="int" order="BEFORE">
            SELECT seq_cp_no.nextval FROM dual
        </selectKey>
        
        INSERT INTO certification_post (
            cp_no, user_no, cp_type, cp_title, cp_contents, cp_mountain_name, 
            cp_hiking_trail, cp_total_time, cp_ascent_time, cp_descent_time, 
            cp_hiking_date, cp_creation_date, cp_transportation, cp_difficulty,
            cp_delete_flag, cp_like_count
        ) VALUES (
            seq_cp_no.currval,
            #{userNo}, 
            0,
            #{title}, 
            #{contents}, 
            #{certificationPostMountainName}, 
            #{certificationPostHikingTrail}, 
            #{certificationPostTotalTime}, 
            #{certificationPostAscentTime}, 
            #{certificationPostDescentTime}, 
            #{certificationPostHikingDate}, 
            SYSDATE, 
            #{certificationPostTransportation}, 
            #{certificationPostHikingDifficulty},
            0,
            0
        )
    </insert>
    
    <select id="getCertificationPost" parameterType="int" resultMap="CertificationPostSelectMap">
        SELECT
            cp_no,
            user_no,
            cp_type,
            cp_title,
            cp_contents,
            cp_mountain_name,
            cp_hiking_trail,
            cp_total_time,
            cp_ascent_time,
            cp_descent_time,
            cp_hiking_date,
            cp_creation_date,
            cp_transportation,
            cp_difficulty
        FROM
            certification_post
        WHERE
            cp_no = #{postNo}
    </select>
    
    <!-- 사진만보여줘야하는데 일단 글제목보여주기 -->
<select id="getMyCertificationPostList" resultMap="CertificationPostSelectMap"  parameterType="site.dearmysanta.domain.certificationPost.CertificationPost">

      select cp_title from certification_post where user_no =#{userNo} AND cp_type = 0
 </select>
    
    <update id="updateCertificationPost" parameterType="site.dearmysanta.domain.certificationPost.CertificationPost">
        UPDATE certification_post
        SET
             cp_title = #{title},
            cp_contents = #{contents},
            cp_mountain_name = #{certificationPostMountainName},
            cp_hiking_trail = #{certificationPostHikingTrail},
            cp_total_time = #{certificationPostTotalTime},
            cp_ascent_time = #{certificationPostAscentTime},
            cp_descent_time = #{certificationPostDescentTime},
            cp_hiking_date = #{certificationPostHikingDate},
            cp_transportation = #{certificationPostTransportation},
            cp_difficulty = #{certificationPostHikingDifficulty}
        WHERE
               cp_no = #{postNo}
    </update>
    
    
    
    
    
    <!-- hashtag -->
        <insert id="addHashtag" parameterType="site.dearmysanta.domain.certificationPost.CertificationPost">
		INSERT INTO HASHTAG (HASHTAG_NO, CP_NO, HASHTAG_CONTENT)
		VALUES (seq_HASHTAG_NO.nextval, #{postNo}, #{certificationPostHashtagContents})
	</insert>
    
    
    <delete id="deleteHashtag" parameterType="int">
        DELETE FROM hashtag
        WHERE hashtag_content = #{certificationPostHashtagContents}
    </delete>
    
  
    <select id="getHashtag" parameterType="int" resultMap="CertificationPostSelectMap">
        SELECT hashtag_content
        FROM hashtag
        WHERE cp_no = #{postNo}
    </select>
    
    <!-- Like  -->
    <insert id="addCertificationPostLike" parameterType="site.dearmysanta.domain.common.Like">
        INSERT INTO LIKES (LIKE_NO, USER_NO, POST_LIKE_NO, POST_LIKE_TYPE, LIKE_DATE)
        VALUES (seq_like_no.NEXTVAL, #{userNo}, #{postNo}, 0 , SYSDATE)
    </insert>
    

   <update id="updateLikeCount" parameterType="map">
        UPDATE certification_post
        SET cp_like_count = (
            SELECT COUNT(*)
            FROM likes
            WHERE post_like_no = #{postNo} AND post_like_type = 0
        )
        WHERE cp_no = #{postNo}
    </update>


    <delete id="deleteCertificationPostLike" parameterType="site.dearmysanta.domain.common.Like">
        DELETE FROM LIKES
        WHERE USER_NO = #{userNo} AND POST_LIKE_NO = #{postNo} AND POST_LIKE_TYPE=0
    </delete>
    
    <select id="getCertificationPostLikeCount" parameterType="site.dearmysanta.domain.common.Like"  resultType="int">
        SELECT COUNT(*)
        FROM likes
        WHERE post_like_no = #{postNo} AND post_like_type = 0
    </select>
    
	<select id="getCertificationPostLikeList"
		parameterType="site.dearmysanta.domain.common.Like"
		resultMap="CertificationPostSelectMap">
		SELECT c.*
		FROM LIKES l, certification_post c
		WHERE l.POST_LIKE_TYPE=0
		AND l.USER_NO = #{userNo} AND l.POST_LIKE_NO = c.cp_no
	</select>
	
	
	
	
	<!-- Comment -->

		<insert id="addCertificationPostComment" parameterType="site.dearmysanta.domain.certificationPost.CertificationPostComment">
        INSERT INTO comments(comment_no, user_no, post_no, comment_contents,comment_creation_date, post_type)
        VALUES(seq_comment_no.NEXTVAL, #{userNo}, #{certificationPostNo}, #{certificationPostCommentContents},sysdate, 0)
    </insert>
    
    <delete id="deleteCertificationPostComment" parameterType="site.dearmysanta.domain.certificationPost.CertificationPostComment">
        DELETE FROM comments
         WHERE USER_NO = #{userNo} AND POST_NO = #{certificationPostNo} AND POST_TYPE=0
    </delete>
    

<select id="getCertificationPostCommentList" parameterType="int" resultMap="certificationPostCommentSelectMap">
    SELECT 
   			 u.user_no,
        	u.nickname,
        	u.profile_image,
        	c.post_no,
        	c.comment_no,
        	c.comment_contents,
        	c.comment_creation_date
        	
    	FROM 
        	comments c
    	JOIN 
        	users u ON c.user_no = u.user_no
    	WHERE 
        	c.post_no = #{postNo} AND c.post_type = 1
	</select>

<!-- search -->
<!---->
 <select id="getCertificationPostList" resultMap="CertificationPostSelectMap"  parameterType="map">
       SELECT * FROM certification_post
    <where>
        <choose>
            <when test="searchCondition == 0 and searchKeyword != ''">
                cp_title LIKE '%' || #{searchKeyword} || '%'
            </when>
            <when test="searchCondition == 1 and searchKeyword != ''">
                nickname LIKE '%' || #{searchKeyword} || '%'
            </when>
            <when test="searchCondition == 6 and searchKeyword != ''">
                user_no = #{searchKeyword}
            </when>
            <!-- 다른 검색 조건 추가 가능 -->
        </choose>
    </where>
    <choose>
        <when test="searchCondition == 4">
            ORDER BY NVL(cp_like_count,0) DESC
        </when>
        <when test="searchCondition == 5">
            ORDER BY NVL(cp_like_count,0) ASC
        </when>
        <when test="searchCondition == 2">
            ORDER BY cp_difficulty DESC
        </when>
        <when test="searchCondition == 3">
            ORDER BY cp_difficulty ASC
        </when>
    </choose>
</select>

<select id="getTotalMountainCount" parameterType="String" resultType="int">
SELECT COUNT(*) FROM certification_post WHERE CP_MOUNTAIN_NAME = #{mountainName}
</select>



</mapper>
