<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="site.dearmysanta.service.user.UserDao">


	<resultMap id = "userSelectMap" type="site.dearmysanta.domain.user.User">
		<result property = "userNo"	column = "user_no"	jdbcType = "NUMERIC"/>
		<result property = "userId"	column = "user_id"	jdbcType = "VARCHAR"/>
		<result property = "userName"	column = "name"	jdbcType = "VARCHAR"/>
		<result property = "userPassword"	column = "password"	jdbcType = "VARCHAR"/>
		<result property = "nickName"	column = "nickname"	jdbcType = "VARCHAR"/>
		<result property = "address"	column = "address"	jdbcType = "VARCHAR"/>
		<result property = "detailAddress"	column = "detail_address"	jdbcType = "VARCHAR"/>
		<result property = "birthDate"	column = "birth_date"	jdbcType = "VARCHAR"/>
		<result property = "phoneNumber"	column = "phone_number"	jdbcType = "VARCHAR"/>
		<result property = "gender"	column = "gender"	jdbcType = "NUMERIC"/>
		<result property = "profileImage"	column = "profile_image"	jdbcType = "VARCHAR"/>
		<result property = "creationDate"	column = "creation_date"	jdbcType = "DATE"/>
		<result property = "hikingPurpose"	column = "hiking_purpose"	jdbcType = "NUMERIC"/>
		<result property = "hikingDifficulty"	column = "hiking_difficulty"	jdbcType = "NUMERIC"/>
		<result property = "hikingLevel"	column = "hiking_level"	jdbcType = "NUMERIC"/>
		<result property = "withdrawDate"	column = "withdraw_date"	jdbcType = "DATE"/>
		<result property = "withdrawReason"	column = "withdraw_reason"	jdbcType = "NUMERIC"/>
		<result property = "withdrawContent"	column = "withdraw_content"	jdbcType = "VARCHAR"/>
		<result property = "role"	column = "role"	jdbcType = "NUMERIC"/>
	    <result property = "badgeImage"	column = "badge_image"	jdbcType = "VARCHAR"/>
		<result property = "certificationCount"	column = "cp_count"	jdbcType = "NUMERIC"/>
		<result property = "meetingCount"	column = "mp_count"	jdbcType = "NUMERIC"/>
		<result property = "introduceContent"	column = "introduce_content"	jdbcType = "VARCHAR"/>
		<result property = "searchRecordFlag"	column = "search_record_setting"	jdbcType = "NUMERIC"/>
		<result property = "allAlertSetting"	column = "all_alert_setting"	jdbcType = "NUMERIC"/>
		<result property = "certificationPostAlertSetting"	column = "cp_setting"	jdbcType = "NUMERIC"/>
		<result property = "meetingPostAlertSetting"	column = "mp_setting"	jdbcType = "NUMERIC"/>
		<result property = "hikingGuideAlertSetting"	column = "hg_setting"	jdbcType = "NUMERIC"/>
		<result property = "timeAlertSetting"	column = "time_alert_setting"	jdbcType = "NUMERIC"/>
		<result property = "locationOverSetting"	column = "location_over_setting"	jdbcType = "NUMERIC"/>
		<result property = "destinationOverSetting"	column = "destination_setting"	jdbcType = "NUMERIC"/>
		<result property = "sunsetAlertSetting"	column = "sunset_setting"	jdbcType = "NUMERIC"/>
		<result property = "timeSetting"	column = "time_setting"	jdbcType = "VARCHAR"/>
	</resultMap>
	
	<!--  SQL : INSERT -->
 	
<insert id="addUser" parameterType="site.dearmysanta.domain.user.User">
    INSERT INTO users (
        user_no, user_id, name, password, nickname, address, birth_date, phone_number, gender,
        hiking_purpose, hiking_difficulty, hiking_level, role, cp_count, mp_count, creation_date,
        profile_image, detail_address, badge_image
    ) VALUES (
        seq_user_no.NEXTVAL, #{userId}, #{userName, jdbcType=VARCHAR}, #{userPassword, jdbcType=VARCHAR}, 
        #{nickName, jdbcType=VARCHAR}, #{address, jdbcType=VARCHAR}, #{birthDate, jdbcType=DATE}, 
        #{phoneNumber, jdbcType=VARCHAR}, #{gender, jdbcType=DECIMAL}, #{hikingPurpose, jdbcType=DECIMAL}, 
        #{hikingDifficulty, jdbcType=DECIMAL}, #{hikingLevel, jdbcType=DECIMAL}, 0, 0, 0, SYSDATE, 
        #{profileImage, jdbcType=VARCHAR}, #{detailAddress, jdbcType=VARCHAR}, 'badge1.png'
    )
</insert>


	<!--  SQL : SELECT ONE -->
	
	<select id="getUser" parameterType="int" resultMap="userSelectMap">
	    SELECT 
	    	user_no, user_id, name, password, nickname, address, birth_date, phone_number, gender, profile_image, creation_date,
	    hiking_purpose, hiking_difficulty, hiking_level, withdraw_date, withdraw_reason, withdraw_content, role,
	    badge_image, cp_count, mp_count, introduce_content, search_record_setting, all_alert_setting,
	    cp_setting,mp_setting, hg_setting, time_alert_setting, location_over_setting, destination_setting,
	    sunset_setting, time_setting, detail_address
	    FROM 
	    	users
	    WHERE 
	    	user_no = #{userNo}
	</select>

<!-- 	<select id="getUserList" resultMap="userSelectMap">
	   SELECT 
	 user_no, user_id, name, password, nickname, address, birth_date, phone_number, gender, profile_image, creation_date,
    hiking_purpose, hiking_difficulty, hiking_level, withdraw_date, withdraw_reason, withdraw_content, role,
    badge_image, cp_count, mp_count, introduce_content, search_record_setting, all_alert_setting,
    cp_setting,mp_setting, hg_setting, time_alert_setting, location_over_setting, destination_setting,
    sunset_setting, time_setting
    FROM 
    	users
	</select> -->
	
	<select id="getUserList" parameterType="site.dearmysanta.domain.common.Search"	resultMap="userSelectMap">
		SELECT * FROM users 
	
	<where>
	    <choose>
	        <when test="searchCondition == 0 and searchKeyword != null and searchKeyword != ''">
	            AND user_id LIKE '%' || #{searchKeyword} || '%'
	        </when>
	        <when test="searchCondition == 1 and searchKeyword != null and searchKeyword != ''">
	            AND nickname LIKE '%' || #{searchKeyword} || '%'
	        </when>
	        <when test="searchCondition == 2 and searchKeyword != null and searchKeyword != ''">
	            AND name LIKE '%' || #{searchKeyword} || '%'
	        </when>
	    </choose>
	</where>
	</select>
	
	<select id="withdrawUserList" parameterType="site.dearmysanta.domain.common.Search"	resultMap="userSelectMap">
		SELECT 
			user_no, user_id, name, nickname, creation_date, withdraw_date
    	FROM 
    		users
    	WHERE
    		withdraw_date IS NOT NULL
	    <choose>
	        <when test="searchCondition == 0 and searchKeyword != null and searchKeyword != ''">
	            AND user_id LIKE '%' || #{searchKeyword} || '%'
	        </when>
	        <when test="searchCondition == 1 and searchKeyword != null and searchKeyword != ''">
	            AND nickname LIKE '%' || #{searchKeyword} || '%'
	        </when>
	        <when test="searchCondition == 2 and searchKeyword != null and searchKeyword != ''">
	            AND name LIKE '%' || #{searchKeyword} || '%'
	        </when>
	    </choose>
	</select>
	
	<!-- <select id="withdrawUserList" resultMap="userSelectMap">
	   SELECT 
	 user_no, user_id, name, nickname, creation_date, withdraw_date
    FROM 
    	users
    WHERE
    	withdraw_date IS NOT NULL
	</select> -->

	<!--  SQL : UPDATE -->
	
	<update id = "updateUser" 	parameterType = "site.dearmysanta.domain.user.User" > 
		UPDATE users
		<set>
		    nickname = #{nickName, jdbcType=VARCHAR},
		    address = #{address, jdbcType=VARCHAR},
		    phone_number = #{phoneNumber, jdbcType=VARCHAR},
		    profile_image = #{profileImage, jdbcType=VARCHAR},
		    hiking_purpose = #{hikingPurpose, jdbcType=DECIMAL},
		    hiking_difficulty = #{hikingDifficulty, jdbcType=DECIMAL},
		    hiking_level = #{hikingLevel, jdbcType=DECIMAL},
		    introduce_content = #{introduceContent, jdbcType = VARCHAR},
		    detail_address=#{detailAddress, jdbcType = VARCHAR},
		    password=#{userPassword, jdbcType=VARCHAR}
		</set>
		WHERE user_no = #{userNo}
	</update>
	
	<!--  SQL : CHECK -->

	<select id = "checkDuplicationId" parameterType="String"	resultType="String">
		SELECT 
			user_id
		FROM 
			users
		WHERE 
			user_id = #{userId}
	</select>
	
	<select id = "checkDuplicationNickName"	parameterType="String" resultType="String">
		SELECT 
			nickname
		FROM 
			users
		WHERE 
			nickname = #{nickName}
	</select> 
	
	<select id = "checkPassword"	parameterType="Map" resultType="int">
		SELECT 
			count(*)
		FROM 
			users
		WHERE 
			user_id = #{userId} AND password = #{userPassword}
	</select> 
	
	 <select id="login" parameterType="map" resultType="String">
    SELECT 
    	user_id, password
    FROM 
    	users 
    WHERE 
    	user_id = #{userId} AND password = #{userPassword} 
</select> 

	<select id="getUserByUserId" parameterType="String" resultMap="userSelectMap">
        SELECT 
        	* 
        FROM 
        	users 
        WHERE 
        	user_id = #{userId}
    </select>
    
    <select id="getUserPassword" parameterType="Map" resultType="String">
        SELECT 
        	password 
        FROM 
        	users 
        WHERE 
        	user_id = #{userId} 
    </select>

<!-- <select id="login" parameterType="map" resultMap="userSelectMap">
    SELECT 
       user_id
    FROM 
       users 
    WHERE 
       user_id = #{userId} AND password = #{userPassword}
</select> -->
	
	<select id = "findUserId"	parameterType="Map" resultType="String">
		SELECT 
			user_Id
		FROM 
			users
		WHERE 
			name = #{userName} AND phone_number = #{phoneNumber}
	</select>   
	
		<select id = "findUserPassword"	parameterType="Map" resultType="String">
		SELECT 
			password
		FROM 
			users
		WHERE 
			user_id = #{userId} AND phone_number = #{phoneNumber}
	</select>
	
	<update id = "deleteUser" 	parameterType = "site.dearmysanta.domain.user.User"  > 
		UPDATE 
			users
		<set>
			withdraw_reason = #{withdrawReason},
			withdraw_content = #{withdrawContent},
			withdraw_date = SYSDATE
		</set>
		WHERE user_no = #{userNo}
	</update>
	
	<update id="setUserPassword" parameterType="Map" >
        UPDATE 
        	users
        <set>
        	password = #{userPassword}
       </set>
        WHERE 
        	user_id = #{userId}
    </update>

	<select id="getTotalCount" parameterType="site.dearmysanta.domain.common.Search" resultType="int">
    SELECT COUNT(*) FROM users
    <where>
        <choose>
            <when test="searchCondition == 0 and searchKeyword != null and searchKeyword != ''">
                AND user_id LIKE '%' || #{searchKeyword} || '%'
            </when>
            <when test="searchCondition == 1 and searchKeyword != null and searchKeyword != ''">
                AND nickname LIKE '%' || #{searchKeyword} || '%'
            </when>
            <when test="searchCondition == 2 and searchKeyword != null and searchKeyword != ''">
                AND name LIKE '%' || #{searchKeyword} || '%'
            </when>
        </choose>
    </where>
</select>
	
	
	<!-- <select id="findUserPhoneNumber" 	parameterType="String" 	resultType="site.dearmysanta.domain.user.User">
    SELECT
		phone_number    
    FROM
    	users 
    WHERE 
    	phone_number = #{phoneNumber}
	</select> -->
	
</mapper>